"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var application = require("tns-core-modules/application");
var platformModule = require("tns-core-modules/platform");
var applicationSettingsModule = require("tns-core-modules/application-settings");
var deepLinkDataModule = require("./shared/deep-link-data");
if (platformModule.isIOS) {
    var mydelegate = require("./delegate/my-delegate");
    application.ios.delegate = mydelegate.MyDelegate;
}
function launchExample() {
    var rootView = application.getRootView();
    if (applicationSettingsModule.hasKey("gotoexample")) {
        var value = applicationSettingsModule.getString("gotoexample");
        if (value !== "") {
            applicationSettingsModule.remove("gotoexample");
            rootView.navigate({
                moduleName: value,
                clearHistory: true
            });
        }
    }
}
application.on(application.resumeEvent, function (args) {
    if (args.android) {
        var dld = new deepLinkDataModule.DeepLinkData("", args.android);
        launchExample();
    }
    else if (args.ios) {
        launchExample();
    }
});
application.run({ moduleName: "app-root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBS0EsMERBQTREO0FBQzVELDBEQUE0RDtBQUM1RCxpRkFBa0Y7QUFFbEYsSUFBTSxrQkFBa0IsR0FBRyxPQUFPLENBQUMseUJBQXlCLENBQUMsQ0FBQztBQUM5RCxJQUFJLGNBQWMsQ0FBQyxLQUFLLEVBQUU7SUFDdEIsSUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLHdCQUF3QixDQUFDLENBQUM7SUFDckQsV0FBVyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFVBQVUsQ0FBQztDQUNwRDtBQUVELFNBQVMsYUFBYTtJQUNsQixJQUFNLFFBQVEsR0FBa0IsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFELElBQUkseUJBQXlCLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1FBQ2pELElBQU0sS0FBSyxHQUFHLHlCQUF5QixDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNqRSxJQUFJLEtBQUssS0FBSyxFQUFFLEVBQUU7WUFDZCx5QkFBeUIsQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLENBQUM7WUFDaEQsUUFBUSxDQUFDLFFBQVEsQ0FBQztnQkFDZCxVQUFVLEVBQUUsS0FBSztnQkFDakIsWUFBWSxFQUFFLElBQUk7YUFDckIsQ0FBQyxDQUFDO1NBQ047S0FDSjtBQUNMLENBQUM7QUFDRCxXQUFXLENBQUMsRUFBRSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsVUFBQyxJQUFJO0lBQ3pDLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNkLElBQU0sR0FBRyxHQUFHLElBQUksa0JBQWtCLENBQUMsWUFBWSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDbEUsYUFBYSxFQUFFLENBQUM7S0FDbkI7U0FBTSxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUU7UUFDakIsYUFBYSxFQUFFLENBQUM7S0FDbkI7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUNILFdBQVcsQ0FBQyxHQUFHLENBQUMsRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5JbiBOYXRpdmVTY3JpcHQsIHRoZSBhcHAuanMgZmlsZSBpcyB0aGUgZW50cnkgcG9pbnQgdG8geW91ciBhcHBsaWNhdGlvbi5cbllvdSBjYW4gdXNlIHRoaXMgZmlsZSB0byBwZXJmb3JtIGFwcC1sZXZlbCBpbml0aWFsaXphdGlvbiwgYnV0IHRoZSBwcmltYXJ5XG5wdXJwb3NlIG9mIHRoZSBmaWxlIGlzIHRvIHBhc3MgY29udHJvbCB0byB0aGUgYXBw4oCZcyBmaXJzdCBtb2R1bGUuXG4qL1xuaW1wb3J0ICogYXMgYXBwbGljYXRpb24gZnJvbSBcInRucy1jb3JlLW1vZHVsZXMvYXBwbGljYXRpb25cIjtcbmltcG9ydCAqIGFzIHBsYXRmb3JtTW9kdWxlIGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3BsYXRmb3JtXCI7XG5pbXBvcnQgKiBhcyBhcHBsaWNhdGlvblNldHRpbmdzTW9kdWxlIGZyb21cInRucy1jb3JlLW1vZHVsZXMvYXBwbGljYXRpb24tc2V0dGluZ3NcIjtcbmltcG9ydCB7RnJhbWV9IGZyb20gXCJ0bnMtY29yZS1tb2R1bGVzL3VpL2ZyYW1lXCI7XG5jb25zdCBkZWVwTGlua0RhdGFNb2R1bGUgPSByZXF1aXJlKFwiLi9zaGFyZWQvZGVlcC1saW5rLWRhdGFcIik7XG5pZiAocGxhdGZvcm1Nb2R1bGUuaXNJT1MpIHtcbiAgICBjb25zdCBteWRlbGVnYXRlID0gcmVxdWlyZShcIi4vZGVsZWdhdGUvbXktZGVsZWdhdGVcIik7XG4gICAgYXBwbGljYXRpb24uaW9zLmRlbGVnYXRlID0gbXlkZWxlZ2F0ZS5NeURlbGVnYXRlO1xufVxuXG5mdW5jdGlvbiBsYXVuY2hFeGFtcGxlKCkge1xuICAgIGNvbnN0IHJvb3RWaWV3OiBGcmFtZSA9IDxGcmFtZT4gYXBwbGljYXRpb24uZ2V0Um9vdFZpZXcoKTtcbiAgICBpZiAoYXBwbGljYXRpb25TZXR0aW5nc01vZHVsZS5oYXNLZXkoXCJnb3RvZXhhbXBsZVwiKSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGFwcGxpY2F0aW9uU2V0dGluZ3NNb2R1bGUuZ2V0U3RyaW5nKFwiZ290b2V4YW1wbGVcIik7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gXCJcIikge1xuICAgICAgICAgICAgYXBwbGljYXRpb25TZXR0aW5nc01vZHVsZS5yZW1vdmUoXCJnb3RvZXhhbXBsZVwiKTtcbiAgICAgICAgICAgIHJvb3RWaWV3Lm5hdmlnYXRlKHtcbiAgICAgICAgICAgICAgICBtb2R1bGVOYW1lOiB2YWx1ZSxcbiAgICAgICAgICAgICAgICBjbGVhckhpc3Rvcnk6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufVxuYXBwbGljYXRpb24ub24oYXBwbGljYXRpb24ucmVzdW1lRXZlbnQsIChhcmdzKSA9PiB7XG4gICAgaWYgKGFyZ3MuYW5kcm9pZCkge1xuICAgICAgICBjb25zdCBkbGQgPSBuZXcgZGVlcExpbmtEYXRhTW9kdWxlLkRlZXBMaW5rRGF0YShcIlwiLCBhcmdzLmFuZHJvaWQpO1xuICAgICAgICBsYXVuY2hFeGFtcGxlKCk7XG4gICAgfSBlbHNlIGlmIChhcmdzLmlvcykge1xuICAgICAgICBsYXVuY2hFeGFtcGxlKCk7XG4gICAgfVxufSk7XG5hcHBsaWNhdGlvbi5ydW4oeyBtb2R1bGVOYW1lOiBcImFwcC1yb290XCIgfSk7XG5cbi8qXG5EbyBub3QgcGxhY2UgYW55IGNvZGUgYWZ0ZXIgdGhlIGFwcGxpY2F0aW9uIGhhcyBiZWVuIHN0YXJ0ZWQgYXMgaXQgd2lsbCBub3RcbmJlIGV4ZWN1dGVkIG9uIGlPUy5cbiovXG4iXX0=